version: '2'
services:
  telegraf:
   container_name: telegraf
   hostname: telegraf
   image: ops/telegraf
   ports:
     - 2003:2003/udp
     - 9190:9190/tcp
     - 8086:8086/tcp
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: ops/prometheus
    volumes:
      - ${PWD}\prometheus\prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - 9090:9090
  grafana:
    container_name: grafana
    hostname: grafana
    image: ops/grafana
    depends_on:
      - prometheus
    volumes:
      - ${PWD}\grafana\provisioning\datasources\datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
    ports:
      - 3000:3000
  grpc_to_kafka:
    image: ops/grpc_to_kafka
    container_name: grpc_to_kafka
    hostname: grpc_to_kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_TGT_TOPIC: test-topic
    ports:
      - "5003:5003" 
  kafka_to_sql:
    image: ops/kafka_to_sql
    container_name: kafka_to_sql
    hostname: kafka_to_sql
    volumes:
      - ${PWD}\krbgen\krb5.conf:/kerberos-secrets/krb5.conf:ro
      - ${PWD}\krbgen\SQLJDBCDriver.conf:/kerberos-secrets/SQLJDBCDriver.conf:ro
      - ${PWD}\krbgen\output\zholudev.keytab:/kerberos-secrets/client.keytab:ro
    environment:
      KAFKA_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_TGT_TOPIC: test-topic
      SQL_CONNECTION_STRING: jdbc:sqlserver://host.docker.internal:1444;user=testUser;password=changeit;databaseName=TEST;useUnicode=true;useBulkCopyForBatchInsert=true;characterEncoding=UTF-8
  grpcui:
    image: wongnai/grpcui
    container_name: grpcui
    hostname: grpcui
    depends_on:
      - event_publisher
    environment:
      GRPCUI_SERVER: host.docker.internal:5003
      GRPCUI_PORT: 8080
    ports:
      - "8080:8080"
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-server:5.5.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'